AWSTemplateFormatVersion: "2010-09-09"
Description: "get_question"
Resources:

  LambdaGetQuestionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - "lambda.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
      - PolicyName: "GetQuestionPermissions"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action: "dynamodb:Query"
            Resource: "arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/answers"
      RoleName: "lambda_get_question"

  LambdaGetQuestion:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Sub "app-control-${AWS::AccountId}"
        S3Key: "lambdas/get_question.zip"
      Description: "ABS. CloudFormation managed. get_question description."
      FunctionName: "get_question"
      Handler: "app.lambda_handler"
      MemorySize: 256
      Role: !GetAtt LambdaGetQuestionRole.Arn
      Runtime: "python3.7"
      Timeout: 5

      Tags:
       -
         Key: 'Environment'
         Value: 'dev'
       -
         Key: 'Pattern'
         Value: 'empty'

      Layers:
        - !Sub "arn:aws:lambda:us-west-2:737060422660:layer:sosw:9"


################################################
## Permissions for CloudWatch ScheduledEvents ##
## The actual Rules are configured in Julie   ##
################################################
  PermissionForEventsToInvokeLambdaGetQuestion:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Ref: "LambdaGetQuestion"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
